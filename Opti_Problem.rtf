{\rtf1\ansi\ansicpg1252\cocoartf2639
\cocoatextscaling0\cocoaplatform0{\fonttbl\f0\fswiss\fcharset0 Helvetica;}
{\colortbl;\red255\green255\blue255;}
{\*\expandedcolortbl;;}
\margl1440\margr1440\vieww11520\viewh8400\viewkind0
\pard\tx720\tx1440\tx2160\tx2880\tx3600\tx4320\tx5040\tx5760\tx6480\tx7200\tx7920\tx8640\pardirnatural\partightenfactor0

\f0\fs24 \cf0 WITH All_Tables AS(\
  SELECT *,\
  		 s.eventid AS Event,\
  		 EXTRACT(month FROM s.saletime) AS Month_Num,\
  		 pricepaid*qtysold AS Total_Sales\
 \
  FROM sales s\
    JOIN event e\
    ON s.eventid = e.eventid\
    JOIN venue v\
    ON e.venueid = v.venueid\
    JOIN category c\
    ON e.catid = c.catid\
    JOIN date d\
    ON e.dateid = d.dateid\
  ),\
  Monthly_Sales AS(\
    SELECT  SUM(Total_Sales) AS Total_Monthly_Sales,\
            Event,\
            venuename AS Venue,\
            catname AS Category,\
            month_num AS Month\
    		\
    FROM All_Tables a\
    GROUP BY month_num, Category, Venue, Event\
    ORDER BY month_num ASC, Category DESC, Venue DESC, Event DESC\
    \
    ),\
    Venue_RT AS(\
    SELECT  SUM(Total_Sales) AS Venue_Sales,\
      		SUM(Venue_Sales) OVER (PARTITION BY Venuename ORDER BY month_num ROWS UNBOUNDED PRECEDING) AS Venue_RT,\
            venuename AS Venue,\
      		month_num,\
      		catname,\
      		DENSE_RANK() OVER (PARTITION BY month_num, catname ORDER BY SUM(Total_Sales) DESC) AS Venue_Rank\
    		\
    FROM All_Tables\
    GROUP BY month_num, venuename, catname\
    \
    ),\
    Category_RT AS(\
    SELECT  SUM(Total_Sales) AS Cat_Sales,\
      		SUM(Cat_Sales) OVER (PARTITION BY Category ORDER BY month_num ROWS UNBOUNDED PRECEDING) AS Cat_RT,\
            catname AS Category,\
      		month_num,\
      		DENSE_RANK() OVER (PARTITION BY month_num ORDER BY SUM(Total_Sales) DESC) AS Category_Rank\
    		\
    FROM All_Tables\
    GROUP BY month_num, catname\
    ),\
    Event_RT AS(\
    SELECT SUM(Total_Sales) AS Event_Sales,\
      	   SUM(Event_Sales) OVER (PARTITION BY Event ORDER BY month_num ROWS UNBOUNDED PRECEDING) AS Event_RT,\
      	   Event,\
     	   venuename AS Venue,\
      	   month_num,\
           DENSE_RANK() OVER (PARTITION BY month_num, venuename, catname ORDER BY SUM(Total_Sales) DESC) AS Event_Rank\
      \
    FROM All_Tables\
    GROUP BY month_num, venuename, catname, event\
      	\
    ),\
     Category_Percent AS(\
      SELECT\
      	Month_num,\
		Category_Rank,\
        Cat_Sales,\
        Category,\
        LAG(Cat_Sales,1) OVER (PARTITION BY Month_num ORDER BY Category_Rank) as Cat_Sales_Previous,\
        COALESCE((Cat_Sales - Cat_Sales_Previous)/Cat_Sales_Previous,0) as Percent_Change,\
        SUM(Cat_Sales) OVER (PARTITION BY Category ORDER BY month_num ROWS UNBOUNDED PRECEDING) as Cat_Sales_RT\
      FROM Category_RT\
      order by month_num asc, Category_Rank ASC\
      )\
    \
SELECT m.Month,\
\
	   m.Category,\
       c.Category_Rank,\
    \
       m.Venue,\
       v.Venue_Rank,\
       \
       m.Event,\
       e.Event_Rank,\
       \
       v.Venue_RT,\
       c.Cat_RT,\
       e.Event_RT,\
       m.Total_Monthly_Sales,\
       \
       TO_CHAR(cp.Percent_Change, 'fm0D00%') AS Percent_Change\
       \
       \
       \
       \
FROM Monthly_Sales m\
JOIN Venue_RT v\
ON m.venue = v.venue\
	AND m.Month = v.month_num\
    AND m.Category = v.catname\
JOIN Category_RT c\
ON m.category = c.category\
	AND m.Month = c.month_num\
JOIN Event_RT e\
ON m.event = e.event\
	AND m.venue = e.venue\
    AND m.Month = e.month_num\
JOIN Category_Percent cp\
ON c.category_rank = cp.category_rank\
	AND c.month_num = cp.month_num\
ORDER BY month ASC, category DESC, venue DESC, event DESC;}